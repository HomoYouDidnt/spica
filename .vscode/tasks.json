{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "setup",
      "type": "shell",
      "command": "uv sync --dev --extra cpu"
    },
    {
      "label": "lint",
      "type": "shell",
      "command": "uvx ruff check ."
    },
    {
      "label": "validate",
      "type": "shell",
      "command": "uvx ruff check . && uvx black --check spica && uv run pytest -q --maxfail=1",
      "options": {
        "env": {
          "PYTHONUTF8": "1",
          "NANOCHAT_BASE_DIR": "${workspaceFolder}/.cache/nanochat",
          "PYTHONPATH": "${workspaceFolder}"
        }
      }
    },
    {
      "label": "run demo",
      "type": "shell",
      "command": "python -m spica.demo --pipeline configs/pipelines/local.yaml",
      "options": {
        "env": {
          "PYTHONUTF8": "1",
          "PYTHONPATH": "${workspaceFolder}"
        }
      }
    },
    {
      "label": "tail telemetry",
      "type": "shell",
      "command": "type spica.telemetry.jsonl"
    },
    {
      "label": "shadow (sample)",
      "type": "shell",
      "command": "python tools/shadow_runner.py --pipeline configs/pipelines/local.yaml --input samples/sanitized.qarg.jsonl --out shadow.metrics.json --limit 100"
    },
    {
      "label": "promotion: build (sample)",
      "type": "shell",
      "command": "python tools/build_promotion_unit.py --variant-id spica_dev --baseline-id prod_2025-10-20 --pipeline configs/pipelines/local.yaml --metrics shadow.metrics.json --datasets '{\"gold\":\"samples/sanitized.qarg.jsonl\",\"fresh\":\"samples/sanitized.qarg.jsonl\"}' --guardrails '{\"kl_persona\":0.01,\"kl_task\":0.04,\"violations\":0}' --mutation-vector '[]' --env-hash dev --out promotion_unit.json"
    }
  ]
}
